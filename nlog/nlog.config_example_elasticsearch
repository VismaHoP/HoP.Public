<?xml version="1.0" encoding="utf-8" ?>
<nlog
  xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  autoReload="true"
  throwExceptions="false"
>
 <extensions>
   <add assembly="NLog.Targets.ElasticSearch"/>
   <add assembly="H2OMicroService"/>
 </extensions>
  <targets>
	<default-wrapper xsi:type="AsyncWrapper" overflowAction="Discard" queueLimit="1000" batchSize="200" timeToSleepBetweenBatches="1"/>
	<target xsi:type="ElasticSearch" 
          name="elastic"
          uri=""
          index="${environment:NLOG_ENVIRONMENT}-${date:format=yyyy.MM.dd}"
          documentType=""
          includeAllProperties="true"
          maxRecursionLimit="1"
          requireAuth="true"
          username=""
          password=""
		  >
    <field name="user" layout="${h2oUserRenderer}"/>
    <field name="request" layout="${h2oRequestRenderer}"/>
    <field name="microservice" layout="${h2oMicroserviceRenderer}"/>
    <field name="ipaddress" layout="${h2oIpAddressRenderer}"/>
    <field name="stacktrace" layout="${stacktrace}"/>
    <field name="message" layout="${message}"/>
    <field name="host" layout="${machinename}"/>
    <field name="threadid" layout="${threadid}"/>
    <field name="logger" layout="${logger}"/>
    <field name="scid" layout="${h2oSessionCorrelationIdRenderer}"/>
    <field name="messageTemplate" layout="${message:raw=true}"/>
  </target>
  </targets>

  <rules>
    <logger name="Microsoft.*" minlevel="Trace" maxlevel="Info" final="true"/>
    <logger name="*" writeTo="elastic">
        <filters defaultAction="Ignore">
            <when condition="starts-with(logger, 'H2O')" action="Log"/>
            <when condition="equals(logger, 'LogsAccess')" action="Log"/>
            <when condition="equals(logger, 'LogsDatabase') and level &gt; LogLevel.Trace" action="Log"/>
            <when condition="equals(logger, 'LogsDatabaseSlowQuery')" action="Log"/>
            <when condition="equals(logger, 'LogsDataIntegration')" action="Log"/>
            <when condition="equals(logger, 'LogsSlowQuery')" action="Log"/>
            <when condition="equals(logger, 'LogsMethodCalls')" action="Log"/>
            <when condition="equals(logger, 'LogsUserActivity')" action="Log"/>

            <when condition="level &gt; LogLevel.Debug" action="Log"/>
        </filters>
    </logger>
  </rules>
</nlog>
